<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="jacob-application" default="all" basedir=".">
<property file="build.properties" />
<property file="../../hidden.properties" />

<tstamp><format property="build.time" pattern="yyyy-MM-dd HH:mm:ss"/></tstamp>

<!-- =================================================================== -->
<!--  Configuration                                                      -->
<!-- =================================================================== -->
<property environment="env"/>
<property name="buildlib.dir"        value="./build"/>
<property name="distlib.dir"         value="./lib"/>
<property name="dist.dir"            value="./dist"/>
<property name="compile.debug"       value="true"/>
<property name="compile.deprecation" value="false"/>
<property name="compile.optimize"    value="true"/>


<!-- =================================================================== -->
<!-- Classpath                                                           -->
<!-- =================================================================== -->
<path id="compile.classpath">
   <fileset dir="${buildlib.dir}">
    <include name="*.jar"/>
   </fileset>
   <fileset dir="${distlib.dir}">
    <include name="*.jar"/>
   </fileset>
</path>

<!-- =================================================================== -->
<!-- ALL                                                                 -->
<!-- =================================================================== -->
<target name="all"  depends="project.zip, war"  description="create the project">
</target>

<target name="tomcat" depends="compile" description="Build query.war">
    <!-- integrate Query admin application -->
    <ant dir="../query.engine" target="all" inheritAll="false">
    </ant>
    
    <copy file="../query.engine/dist/OpenQuery-2.9.war" toFile="./build/OpenQuery-2.9.war" overwrite="true"/>

    <!-- prepare the compressed javascript version -->
    <antcall target="war"/>
    
    <copy file="${dist.dir}/${app.name}.war" toFile="/home/andherz/bin/tomcat/webapps/${app.name}.war" overwrite="true"/>

   <delete dir="/home/andherz/bin/tomcat/webapps/${app.name}" quiet="true"/>
</target>

<!-- =================================================================== -->
<!-- Upload the application to the Demo-Server and the WebSite           -->
<!-- =================================================================== -->
<target name="upload" depends="compile" description="upload the war and project file to the demo- and web-server"  >

   <copy file="./doc/screenshot.png" toFile="./doc/${app.name}_screenshot.png" overwrite="true"/>
   <ftp  server="${webserver.ftp.server}"
          remotedir="${webserver.ftp.dir}"
          userid="${webserver.ftp.user}"
          password="${webserver.ftp.password}"
          verbose="yes"
          binary="yes">
       <fileset dir="./doc/">
          <include name="${app.name}_screenshot.png"/>
       </fileset>
    </ftp>
    <delete dir="./doc/${app.name}_screenshot.png" quiet="true"/>

    <ant dir="../query.engine" target="all" inheritAll="false">
    </ant>
   
    <copy file="../query.engine/dist/OpenQuery-2.9.war" toFile="./build/OpenQuery-2.9.war" overwrite="true"/>
    
    <antcall target="project.zip"/>  

    <echo message="=============================================================================================" />
    <echo message="= Upload ${app.name}_src.zip to the ${webserver.ftp.server} Server"  />
    <echo message="=============================================================================================" />
    <ftp  server="${shop.ftp.server}"
          remotedir="${shop.ftp.dir}"
          userid="${shop.ftp.user}"
          password="${shop.ftp.password}"
          verbose="yes"
          binary="yes">
       <fileset dir="${dist.dir}/">
          <include name="${app.name}_src.zip"/>
       </fileset>
    </ftp>

    <antcall target="war"/>  

    <echo message="=============================================================================================" />
    <echo message="= Upload ${app.name}.war to the ${webserver.ftp.server}" />
    <echo message="=============================================================================================" />
    <ftp  server="${webserver.ftp.server}"
          remotedir="${webserver.ftp.dir}"
          userid="${webserver.ftp.user}"
          password="${webserver.ftp.password}"
          verbose="yes"
          binary="yes">
       <fileset dir="${dist.dir}/">
          <include name="${app.name}.war"/>
       </fileset>
   </ftp>

    <echo message="=============================================================================================" />
    <echo message="= Upload ${app.name}.war to the ${demoserver.ftp.server} Server" />
    <echo message="=============================================================================================" />
    <scp todir="${demoserver.ftp.user}@${demoserver.ftp.server}:${demoserver.ftp.dir}"
         passphrase="my extremely secret passphrase"
          keyfile="${user.home}/.ssh/id_dsa"
      >
        <fileset dir="${dist.dir}/">
          <include name="${app.name}.war"/>
        </fileset>
    </scp>

</target>

    
<!-- =================================================================== -->
<!-- jACAPP                                                               -->
<!-- =================================================================== -->
<target name="jacapp" depends="compile, version" description="create the .jacapp file for the jACOB-Application server"  >

    <!-- move the jsp to the classes directory -->
    <filter token="VERSION"     value="${app.version}"/>
    <filter token="APPLICATION" value="${app.name}"/>
  <copy todir="./classes/web" filtering="true">
        <fileset dir="./web">
        <include name="**/*.jsp"/>
        <include name="**/*.js"/>
        </fileset>
  </copy>
  <copy todir="./classes/web" filtering="false">
        <fileset dir="./web">
            <exclude name="**/*.jsp"/>
        </fileset>
  </copy>

    <copy todir="./classes/lib" >
        <fileset dir="./lib">
        <include name="**"/>
        </fileset>
  </copy>

  <mkdir dir="${dist.dir}/"/>
    <jar compress="true"  destfile="${dist.dir}/${app.name}-${app.version}.jacapp" >
        <fileset dir="./classes">
            <exclude name="applications/${app.name}/**/*.java"/>
        </fileset>
        <manifest>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Built-Machine" value="${env.COMPUTERNAME}"/>
            <attribute name="Built-Time" value="${build.time}"/>
            <attribute name="jACOB-Engine-Version"      value="${jacob.version}"/>
            <attribute name="jACOB-Application-Version" value="${app.version}"/>
            <attribute name="jACOB-Application-Name"    value="${app.name}"/>
        </manifest>
   </jar>
</target>

<target name="project.zip" depends="clean" description="create the project.zip file"  >
  <mkdir dir="${dist.dir}/"/>
    <jar compress="true"  destfile="${dist.dir}/${app.name}_src.zip" >
        <fileset dir=".">
            <exclude name="**/classes/**"/>
            <exclude name="**/*.jacapp"/>
        </fileset>
   </jar>
</target>
    
    <!-- =================================================================== -->
    <!-- DEPLOY and CONFIGURATION                                            -->
    <!-- =================================================================== -->
    <target name="deploy_configure" depends="deploy, configure" description="deploy AND configure your application to the jACOB-Application server"  >
    </target>
        
    <!-- =================================================================== -->
    <!-- DEPLOY                                                               -->
    <!-- =================================================================== -->
    <target name="deploy" depends="jacapp, checkProperties" description="deploy the jacapp to the jACOB-Application server"  >

        <echo message="=============================================================================================" />
        <echo message="|| deploy file: ${basedir}/${dist.dir}/${app.name}-${app.version}.jacapp" />
        <get src="${jacob.url}cmdenter?entry=DeployLocalJacapp&amp;app=admin&amp;user=${admin.username}&amp;pwd=${admin.passwd}&amp;jacappPath=${basedir}/${dist.dir}/${app.name}-${app.version}.jacapp"
             dest="deploy.log"
         verbose="true"/>
         <loadfile property="deployMessage"    srcFile="deploy.log"/>
        <echo message="${deployMessage}"/>
    </target>

    <!-- =================================================================== -->
    <!-- CONFIGURE                                                           -->
    <!-- =================================================================== -->
    <target name="version" description="determine the jACOB jar version and provide them as property">
        <java  fork="true"
               failonerror="true"
               outputproperty="jacob.version"
               classname="de.tif.jacob.core.Version"
               >
            <classpath refid="compile.classpath" />
            <arg value="jacob.version"/>
        </java>
        <echo message="${jacob.version}"/>
    </target>

    <!-- =================================================================== -->
    <!-- CONFIGURE                                                           -->
    <!-- =================================================================== -->
    <target name="configure" depends="jacapp, checkProperties" description="deploy the jacapp to the jACOB-Application server"  >

        <echo message="=============================================================================================" />
        <echo message="|| configure application: ${basedir}/${dist.dir}/${app.name}-${app.version}.jacapp" />
        <get src="${jacob.url}cmdenter?entry=ReconfigureDatasource&amp;app=admin&amp;user=${admin.username}&amp;pwd=${admin.passwd}&amp;applicationName=${app.name}&amp;applicationVersion=${app.version}&amp;dataSource=${app.ds}"
             dest="configure.log"
         verbose="true"/>
         <loadfile property="configureMessage"  srcFile="configure.log"/>
        <echo message="${configureMessage}"/>
        <echo message="DB configure done."/>
    </target>

    <!-- =================================================================== -->
    <!-- Property check for deploy and configure                             -->
    <!-- =================================================================== -->
    <target name="checkProperties"> 
        <fail unless="jacob.url">
    Error       
    ============================================================================
        Please add the property 'tomcat.port' to your build.properties file!!
        example:
            jacob.url=http://localhost:8080/jacob
            app.ds=${app.name}DataSource
            admin.username=AdminUserName
            admin.passwd=SECRET:-)
    =============================================================================
            </fail>

        <fail unless="app.ds">
    Error       
    ============================================================================
        Need the application data source name for configure
        Please add the property 'app.ds' into the build.properties file
            
        example:
            tomcat.port=8080
            app.ds=${app.name}DataSource
            admin.username=AdminUserName
            admin.passwd=SECRET:-)
    =============================================================================
            </fail>

        

        <fail unless="admin.username">
    Error       
    ============================================================================
        Please insert the property 'admin.username' to your build.properties file!!
            
        It must be the username and password the the adminstation application
        of your local jACOB server.
            
        example:
            tomcat.port=8080
            app.ds=${app.name}DataSource
            admin.username=AdminUserName
            admin.passwd=SECRET:-)
    =============================================================================
            </fail>
    </target>

<target name="war" depends="jacapp">
      <delete dir="./${app.name}TMP" quiet="true"/>
        <unjar src="${jacobDemoWar}" dest="./${app.name}TMP"/>
    
    <!-- move the jacapp-file to the required position -->
    <copy file="${dist.dir}/${app.name}-${app.version}.jacapp" toFile="./${app.name}TMP/WEB-INF/jacapp/${app.name}-${app.version}.jacapp">
    </copy>
    
        <!-- move the application information -->
        <copy file="./applicationInfo.html" toFile="./${app.name}TMP/applicationInfo.html" overwrite="true">
        </copy>

        <jar destfile="${dist.dir}/${app.name}.war" >
        <fileset dir="./${app.name}TMP">
        </fileset>
   </jar>
   <delete dir="./${app.name}TMP" quiet="true"/>

</target>

<!-- =================================================================== -->
<!-- CLEAN                                                               -->
<!-- =================================================================== -->
<target name="clean" description="Delete old build and dist directories">
    <delete quiet="true" dir="./classes"/>
    <delete quiet="true" dir="./dist"/>
    <delete dir="./${app.name}TMP" quiet="true"/>
</target>


<!-- =================================================================== -->
<!-- Compile                                                             -->
<!-- =================================================================== -->
<target name="compile" depends="clean" description="Compile Java sources">

    <filter token="VERSION"     value="${app.version}"/>
    <filter token="APPLICATION" value="${app.name}"/>
    <copy file="./java/jacob/common/AppLogger.template" toFile="./java/jacob/common/AppLogger.java" filtering="true" overwrite="true">
    </copy>

    <mkdir dir="./classes"/>
    <!-- Compile Java classes as necessary -->
    <javac encoding="ISO-8859-1" srcdir="java" debug="on" destdir="./classes" >
       <classpath refid="compile.classpath" />
    </javac>

    <!-- move the images to the class directory for the jar -->
    <copy todir="./classes">
        <fileset dir="./java">
            <include name="**"/>
        </fileset>
    </copy>

    <!-- move the jad-file to the required position -->
    <copy file="./application.jad" toFile="./classes/jacob/config/application.jad" overwrite="true">
    </copy>
</target>
</project>

