package de.shorti.baseknowledge;

/**
 * short-i Class generated by automatic ClassGenerator
 * Date: Mon May 21 18:30:15 GMT+02:00 2001
 */
import de.shorti.*;
import java.util.HashSet;
import java.util.Vector;
import java.util.Iterator;
import java.sql.*;
import de.shorti.util.basic.*;
import de.shorti.util.search.fuzzy.*;
import de.shorti.baseknowledge.objects.Language;



public class LanguageNameCatalog
{
	static final int MIN_HIT_PERCENTAGE = 30;
	static TraceDispatcher  libTrace = TraceFactory.getTraceDispatcher();
	static FuzzySearch search = new FuzzySearch();


	/**
	* returns Vector<Keyword>
	*/
	static public Vector find(String s)
	{
		Vector tmp    = search.find(s,MIN_HIT_PERCENTAGE);
		Vector result = new Vector();
		// the first Item is the best hit....move only the 'top ten'
		// to the result set
		//
		int lastHitPercentage = 0;
		Iterator iter = tmp.iterator();
		while(iter.hasNext())
		{
			Keyword k = (Keyword)iter.next();
			if(k.m_percentage >= lastHitPercentage )
			{
				result.add(k);
				lastHitPercentage = k.m_percentage;
			}
			else
			{
				return result;
			}
		}
		return result;
	}


	/**
	* load the keywords in the FuzzySearch engine
	*/
	static
	{
		trace.debug2("loading LanguageNameCatalog from database...");
		Vector   objects    = Language.getAll();
		Iterator iter       = objects.iterator();
		HashSet  newCatalog = new HashSet();
		Language object = null;

		while(iter.hasNext())
		{
			object = (Language)iter.next();
			newCatalog.add(object.getName());
		}
		search.setCatalog(newCatalog);
		trace.debug2("...done");

	}

}
