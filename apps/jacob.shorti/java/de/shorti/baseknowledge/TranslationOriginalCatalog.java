package de.shorti.baseknowledge;

/**
 * short-i Class generated by automatic ClassGenerator
 * Date: Tue Mar 06 11:03:40 GMT+01:00 2001
 */
import de.shorti.*;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.Iterator;
import java.sql.*;
import de.shorti.util.basic.*;
import de.shorti.util.search.fuzzy.*;
import de.shorti.baseknowledge.objects.*;



public class TranslationOriginalCatalog
{
	static final int MIN_HIT_PERCENTAGE = 30;
	static TraceDispatcher  trace = TraceFactory.getTraceDispatcher();
	static FuzzySearch search = new FuzzySearch();


	/**
	* returns ArrayList<Keyword>
	*/
	static public ArrayList find(String s)
	{
		return find(s,MIN_HIT_PERCENTAGE);
	}

	/**
	* returns ArrayList<Keyword>
	*/
	static public ArrayList find(String s, int hitPercentage)
	{
        trace.debug1("try to find ["+s+"] with min "+hitPercentage+"% hit");
		ArrayList tmp    = search.find(s,hitPercentage);
        trace.debug1(tmp.size()+" elements found");

		ArrayList result = new ArrayList();
		// the first Item is the best hit....move only the 'top ten'
		// to the result set
		//
		int lastHitPercentage = 0;
		Iterator iter = tmp.iterator();
		while(iter.hasNext())
		{
			Keyword k = (Keyword)iter.next();

			if(k.m_percentage < lastHitPercentage )
				return result;

            result.add(k);
            lastHitPercentage = k.m_percentage;
		}
		return result;
	}


	/**
	* load the keywords in the FuzzySearch engine
	*/
	static
	{
		trace.debug2("loading TranslationOriginalCatalog from database...");
		ArrayList   objects    = Translation.getAll();
		Iterator iter       = objects.iterator();
		HashSet  newCatalog = new HashSet();
		Translation object = null;

		while(iter.hasNext())
		{
			object = (Translation)iter.next();
			newCatalog.add(object.getOriginal());
		}
		search.setCatalog(newCatalog);
		trace.debug2("...done");
	}

    public static void main(String[] args)
    {
//        ArrayList result = find("spilen",10);
//        Iterator iter = result.iterator();
//        while(iter.hasNext())
//        {
//            System.out.println(iter.next());
//        }

		ArrayList tmp    = search.find("bedetet",30);
        trace.debug1(tmp.size()+" elements found");
		Iterator iter = tmp.iterator();
		while(iter.hasNext())
		{
			Keyword k = (Keyword)iter.next();
            System.out.println(k);
		}
    }
}
