
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Wed Feb 23 12:46:16 CET 2011
//----------------------------------------------------

package de.tif.qes.report;

import java.util.*;
import de.tif.qes.report.element.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/** CUP v0.10k generated parser.
  * @version Wed Feb 23 12:46:16 CET 2011
  */
public class QWRParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public QWRParser() {super();}

  /** Constructor which sets the default scanner. */
  public QWRParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\116\000\002\002\004\000\002\003\006\000\002\004" +
    "\004\000\002\006\002\000\002\006\003\000\002\005\004" +
    "\000\002\007\036\000\002\010\003\000\002\010\003\000" +
    "\002\011\003\000\002\011\004\000\002\011\004\000\002" +
    "\012\002\000\002\012\003\000\002\012\003\000\002\015" +
    "\003\000\002\015\002\000\002\014\003\000\002\014\004" +
    "\000\002\013\003\000\002\013\003\000\002\013\003\000" +
    "\002\013\003\000\002\013\003\000\002\013\003\000\002" +
    "\013\003\000\002\013\003\000\002\016\007\000\002\017" +
    "\007\000\002\020\010\000\002\021\010\000\002\022\010" +
    "\000\002\023\010\000\002\024\007\000\002\026\002\000" +
    "\002\026\003\000\002\025\004\000\002\030\002\000\002" +
    "\030\003\000\002\027\005\000\002\032\002\000\002\032" +
    "\003\000\002\031\005\000\002\033\033\000\002\035\002" +
    "\000\002\035\003\000\002\034\004\000\002\036\002\000" +
    "\002\036\003\000\002\040\002\000\002\040\003\000\002" +
    "\037\005\000\002\037\005\000\002\041\003\000\002\041" +
    "\002\000\002\042\004\000\002\042\004\000\002\042\004" +
    "\000\002\044\003\000\002\044\003\000\002\043\003\000" +
    "\002\043\002\000\002\046\003\000\002\046\002\000\002" +
    "\045\010\000\002\050\002\000\002\050\003\000\002\047" +
    "\006\000\002\052\002\000\002\052\003\000\002\051\011" +
    "\000\002\053\012\000\002\054\003\000\002\054\003\000" +
    "\002\055\006\000\002\056\003\000\002\056\004\000\002" +
    "\057\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\267\000\004\072\005\001\002\000\006\014\ufffe\016" +
    "\013\001\002\000\004\104\010\001\002\000\004\002\007" +
    "\001\002\000\004\002\001\001\002\000\006\014\uffff\016" +
    "\uffff\001\002\000\004\014\016\001\002\000\004\014\ufffd" +
    "\001\002\000\004\104\014\001\002\000\004\014\ufffc\001" +
    "\002\000\004\025\261\001\002\000\004\053\017\001\002" +
    "\000\004\104\020\001\002\000\004\067\021\001\002\000" +
    "\006\062\022\065\023\001\002\000\004\027\ufff9\001\002" +
    "\000\004\027\ufffa\001\002\000\004\027\025\001\002\000" +
    "\004\104\026\001\002\000\004\073\027\001\002\000\004" +
    "\102\030\001\002\000\004\033\031\001\002\000\004\102" +
    "\032\001\002\000\004\061\033\001\002\000\004\102\034" +
    "\001\002\000\004\017\035\001\002\000\010\023\041\047" +
    "\037\055\036\001\002\000\004\070\ufff8\001\002\000\004" +
    "\104\257\001\002\000\004\070\043\001\002\000\004\104" +
    "\042\001\002\000\004\070\ufff6\001\002\000\004\052\044" +
    "\001\002\000\004\056\045\001\002\000\004\104\046\001" +
    "\002\000\004\070\047\001\002\000\004\004\050\001\002" +
    "\000\004\064\051\001\002\000\004\104\052\001\002\000" +
    "\004\045\053\001\002\000\010\006\054\035\056\074\ufff5" +
    "\001\002\000\004\074\ufff4\001\002\000\004\074\057\001" +
    "\002\000\004\074\ufff3\001\002\000\006\014\063\075\ufff1" +
    "\001\002\000\004\075\256\001\002\000\006\014\uffed\075" +
    "\uffed\001\002\000\006\014\uffee\075\uffee\001\002\000\016" +
    "\012\077\020\102\021\101\046\076\050\100\051\075\001" +
    "\002\000\006\014\uffea\075\uffea\001\002\000\006\014\uffe7" +
    "\075\uffe7\001\002\000\006\014\uffec\075\uffec\001\002\000" +
    "\006\014\uffe9\075\uffe9\001\002\000\006\014\063\075\ufff2" +
    "\001\002\000\006\014\ufff0\075\ufff0\001\002\000\006\014" +
    "\uffeb\075\uffeb\001\002\000\006\014\uffe8\075\uffe8\001\002" +
    "\000\006\014\uffef\075\uffef\001\002\000\006\026\247\032" +
    "\246\001\002\000\006\026\236\032\237\001\002\000\004" +
    "\044\226\001\002\000\004\104\223\001\002\000\004\027" +
    "\116\001\002\000\004\104\103\001\002\000\006\010\106" +
    "\024\uffdf\001\002\000\004\100\115\001\002\000\004\024" +
    "\111\001\002\000\004\104\110\001\002\000\004\024\uffde" +
    "\001\002\000\004\024\uffdd\001\002\000\004\104\112\001" +
    "\002\000\004\104\113\001\002\000\004\102\114\001\002" +
    "\000\012\026\uffe0\030\uffe0\040\uffe0\100\uffe0\001\002\000" +
    "\006\014\uffe5\075\uffe5\001\002\000\004\104\117\001\002" +
    "\000\012\010\uffd5\011\121\024\uffd5\040\uffd5\001\002\000" +
    "\010\010\106\024\uffdf\040\uffd2\001\002\000\004\106\123" +
    "\001\002\000\010\010\uffd4\024\uffd4\040\uffd4\001\002\000" +
    "\010\010\uffd3\024\uffd3\040\uffd3\001\002\000\004\040\uffd1" +
    "\001\002\000\004\040\126\001\002\000\004\104\127\001" +
    "\002\000\004\073\130\001\002\000\004\102\131\001\002" +
    "\000\004\060\132\001\002\000\004\102\133\001\002\000" +
    "\004\071\134\001\002\000\010\034\uffd0\036\uffd0\057\137" +
    "\001\002\000\006\034\144\036\uffcb\001\002\000\006\034" +
    "\uffcf\036\uffcf\001\002\000\006\005\141\015\140\001\002" +
    "\000\004\102\143\001\002\000\004\102\142\001\002\000" +
    "\006\034\uffce\036\uffce\001\002\000\006\034\uffcd\036\uffcd" +
    "\001\002\000\004\036\uffcc\001\002\000\004\036\146\001" +
    "\002\000\010\007\222\041\220\054\221\001\002\000\004" +
    "\066\150\001\002\000\004\104\151\001\002\000\006\042" +
    "\152\067\uffc4\001\002\000\004\067\uffc5\001\002\000\004" +
    "\067\154\001\002\000\006\013\155\022\157\001\002\000" +
    "\012\022\uffc7\030\uffc7\031\uffc7\100\uffc7\001\002\000\012" +
    "\022\160\030\uffc2\031\uffc2\100\uffc2\001\002\000\012\022" +
    "\uffc6\030\uffc6\031\uffc6\100\uffc6\001\002\000\004\004\213" +
    "\001\002\000\010\030\uffc3\031\uffc3\100\uffc3\001\002\000" +
    "\010\030\uffc0\031\163\100\uffc0\001\002\000\004\102\200" +
    "\001\002\000\006\030\uffbf\100\uffbf\001\002\000\006\030" +
    "\170\100\uffbd\001\002\000\004\100\177\001\002\000\004" +
    "\100\uffbc\001\002\000\004\063\171\001\002\000\004\076" +
    "\172\001\002\000\004\102\173\001\002\000\004\101\174" +
    "\001\002\000\004\102\175\001\002\000\004\077\176\001" +
    "\002\000\004\100\uffbb\001\002\000\006\014\uffd6\075\uffd6" +
    "\001\002\000\012\026\uffdc\030\uffdc\032\202\100\uffdc\001" +
    "\002\000\010\026\207\030\uffd9\100\uffd9\001\002\000\004" +
    "\104\204\001\002\000\010\026\uffdb\030\uffdb\100\uffdb\001" +
    "\002\000\006\010\106\024\uffdf\001\002\000\010\026\uffda" +
    "\030\uffda\100\uffda\001\002\000\006\030\uffbe\100\uffbe\001" +
    "\002\000\004\104\211\001\002\000\006\030\uffd8\100\uffd8" +
    "\001\002\000\006\010\106\024\uffdf\001\002\000\006\030" +
    "\uffd7\100\uffd7\001\002\000\004\104\214\001\002\000\004" +
    "\022\215\001\002\000\004\040\216\001\002\000\004\104" +
    "\217\001\002\000\010\030\uffc1\031\uffc1\100\uffc1\001\002" +
    "\000\004\066\uffca\001\002\000\004\066\uffc8\001\002\000" +
    "\004\066\uffc9\001\002\000\006\010\106\024\uffdf\001\002" +
    "\000\004\100\225\001\002\000\006\014\uffe6\075\uffe6\001" +
    "\002\000\004\104\227\001\002\000\004\104\230\001\002" +
    "\000\004\067\231\001\002\000\006\037\234\043\232\001" +
    "\002\000\004\100\uffb9\001\002\000\004\100\235\001\002" +
    "\000\004\100\uffb8\001\002\000\006\014\uffba\075\uffba\001" +
    "\002\000\004\104\243\001\002\000\004\104\240\001\002" +
    "\000\006\010\106\024\uffdf\001\002\000\004\100\242\001" +
    "\002\000\006\014\uffe4\075\uffe4\001\002\000\006\010\106" +
    "\024\uffdf\001\002\000\004\100\245\001\002\000\006\014" +
    "\uffe3\075\uffe3\001\002\000\004\104\253\001\002\000\004" +
    "\104\250\001\002\000\006\010\106\024\uffdf\001\002\000" +
    "\004\100\252\001\002\000\006\014\uffe1\075\uffe1\001\002" +
    "\000\006\010\106\024\uffdf\001\002\000\004\100\255\001" +
    "\002\000\006\014\uffe2\075\uffe2\001\002\000\004\025\ufffb" +
    "\001\002\000\004\070\ufff7\001\002\000\004\002\000\001" +
    "\002\000\004\074\262\001\002\000\004\104\264\001\002" +
    "\000\006\075\270\104\264\001\002\000\004\102\266\001" +
    "\002\000\006\075\uffb6\104\uffb6\001\002\000\004\102\267" +
    "\001\002\000\006\075\uffb4\104\uffb4\001\002\000\004\002" +
    "\uffb7\001\002\000\006\075\uffb5\104\uffb5\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\267\000\006\003\005\004\003\001\001\000\006\005" +
    "\011\006\010\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\014\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\055\257\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\023\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\037\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\012\054" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\013\070\014\067\015\057\016\061\017\060" +
    "\020\065\021\071\022\063\023\066\033\072\053\064\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\013\073\016\061" +
    "\017\060\020\065\021\071\022\063\023\066\033\072\053" +
    "\064\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\024\103\025\106\026\104\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\034\121\035\117\001" +
    "\001\000\012\024\123\025\106\026\104\036\124\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\037\135\040\134\001\001" +
    "\000\004\041\144\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\042\146\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\043\152\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\044\155\001\001\000\002\001\001\000\006" +
    "\045\160\046\161\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\047\163\050\164\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\051\166\052" +
    "\165\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\027\202\030\200\001\001\000" +
    "\006\031\207\032\205\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\024\204\025\106\026\104\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\024\211\025\106\026\104\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\024\223" +
    "\025\106\026\104\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\054\232\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\024\240\025\106\026\104\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\024\243" +
    "\025\106\026\104\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\024\250" +
    "\025\106\026\104\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\024\253\025\106\026\104\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\056\262" +
    "\057\264\001\001\000\004\057\270\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$QWRParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$QWRParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$QWRParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


 
	static private final transient Log logger = LogFactory.getLog(QWRParser.class);

	static public final transient String RCS_ID = "$Id: qwr.cup,v 1.2 2009-12-07 03:36:09 sonntag Exp $";
	static public final transient String RCS_REV = "$Revision: 1.2 $";
  
	private String errorMessage(String message, Object info)
	{
		StringBuffer m = new StringBuffer("Error ");

		if (info instanceof java_cup.runtime.Symbol)
			m.append("(").append(info.toString()).append(")");

		m.append(": ").append(message);

		return m.toString();
	}

	public void report_error(String message, Object info)
	{
		logger.error(errorMessage(message, info));
	}

	public void report_fatal_error(String message, Object info)
	{
		logger.fatal(errorMessage(message, info));
		throw new RuntimeException("Syntax error");
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$QWRParser$actions {

 
	private QWRDefinition qwrDefinition = new QWRDefinition();  

  private final QWRParser parser;

  /** Constructor */
  CUP$QWRParser$actions(QWRParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$QWRParser$do_action(
    int                        CUP$QWRParser$act_num,
    java_cup.runtime.lr_parser CUP$QWRParser$parser,
    java.util.Stack            CUP$QWRParser$stack,
    int                        CUP$QWRParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$QWRParser$result;

      /* select the action based on the action number */
      switch (CUP$QWRParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // fontinfo_font ::= STRING_LITERAL INTEGER_LITERAL INTEGER_LITERAL 
            {
              Object RESULT = null;
		int font_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int font_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String font_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int num1left = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int num1right = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		java.lang.Integer num1 = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		int num2left = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int num2right = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.Integer num2 = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(45/*fontinfo_font*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // fontinfo_fonts ::= fontinfo_fonts fontinfo_font 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(44/*fontinfo_fonts*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // fontinfo_fonts ::= fontinfo_font 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(44/*fontinfo_fonts*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // fontinfo_declaration ::= FONTINFO LBRACE fontinfo_fonts RBRACE 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(43/*fontinfo_declaration*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // report_constraint_type ::= KEY 
            {
              QWRConstraintType RESULT = null;
		
	RESULT = QWRConstraintType.KEY;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(42/*report_constraint_type*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // report_constraint_type ::= NONKEY 
            {
              QWRConstraintType RESULT = null;
		
	RESULT = QWRConstraintType.NOKEY;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(42/*report_constraint_type*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // report_constraint ::= DEFINE CONSTRAINT ON STRING_LITERAL STRING_LITERAL TYPE report_constraint_type SEMICOLON 
            {
              QWRConstraint RESULT = null;
		int field_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).left;
		int field_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).right;
		java.lang.String field_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).value;
		int field_constraintleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).left;
		int field_constraintright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).right;
		java.lang.String field_constraint = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).value;
		int typeleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRConstraintType type = (QWRConstraintType)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRConstraint(field_name, field_constraint, type);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(41/*report_constraint*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // report_field_function ::= FUNCTION SUBSTRING LPAREN INTEGER_LITERAL COMMA INTEGER_LITERAL RPAREN 
            {
              QWRFieldFunction RESULT = null;
		int arg1left = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).left;
		int arg1right = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).right;
		java.lang.Integer arg1 = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).value;
		int arg2left = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int arg2right = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		java.lang.Integer arg2 = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRFieldSubstringFunction(arg1.intValue(), arg2.intValue());

              CUP$QWRParser$result = new java_cup.runtime.Symbol(39/*report_field_function*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // report_field_function_opt ::= report_field_function 
            {
              QWRFieldFunction RESULT = null;
		int functionleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int functionright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRFieldFunction function = (QWRFieldFunction)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = function;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(40/*report_field_function_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // report_field_function_opt ::= 
            {
              QWRFieldFunction RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(40/*report_field_function_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // report_field_grouped ::= GROUPED INTEGER_LITERAL report_header_opt report_footer_opt 
            {
              QWRFieldGrouping RESULT = null;
		int grouped_nbrleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int grouped_nbrright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.Integer grouped_nbr = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int headerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int headerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRCaption header = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		int footerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int footerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption footer = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = new QWRFieldGrouping(grouped_nbr.intValue(), header, footer);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(37/*report_field_grouped*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // report_field_grouped_opt ::= report_field_grouped 
            {
              QWRFieldGrouping RESULT = null;
		int groupingleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int groupingright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRFieldGrouping grouping = (QWRFieldGrouping)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = grouping;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(38/*report_field_grouped_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // report_field_grouped_opt ::= 
            {
              QWRFieldGrouping RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(38/*report_field_grouped_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // report_field_fieldset ::= FIELDSET ANCHOR STRING_LITERAL FIELDSET LABEL STRING_LITERAL 
            {
              Object RESULT = null;
		int anchor_fieldleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).left;
		int anchor_fieldright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).right;
		java.lang.String anchor_field = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).value;
		int labelleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int labelright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.String label = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(35/*report_field_fieldset*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // report_field_fieldset_opt ::= 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(36/*report_field_fieldset_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // report_field_fieldset_opt ::= report_field_fieldset 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(36/*report_field_fieldset_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // report_field_linebreak_opt ::= 
            {
              Boolean RESULT = null;
		
	RESULT = Boolean.FALSE;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(33/*report_field_linebreak_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // report_field_linebreak_opt ::= LINEBREAK 
            {
              Boolean RESULT = null;
		
	RESULT = Boolean.TRUE;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(33/*report_field_linebreak_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // report_field_type ::= FIELDSET 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(34/*report_field_type*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // report_field_type ::= DATABASE 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(34/*report_field_type*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // report_field_justification ::= JUSTIFICATION RIGHT 
            {
              QWRFieldJustification RESULT = null;
		
	RESULT = QWRFieldJustification.RIGHT;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(32/*report_field_justification*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // report_field_justification ::= JUSTIFICATION CENTER 
            {
              QWRFieldJustification RESULT = null;
		
	RESULT = QWRFieldJustification.CENTER;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(32/*report_field_justification*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // report_field_justification ::= JUSTIFICATION LEFT 
            {
              QWRFieldJustification RESULT = null;
		
	RESULT = QWRFieldJustification.LEFT;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(32/*report_field_justification*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // report_field_hidden_opt ::= 
            {
              Boolean RESULT = null;
		
	RESULT = Boolean.FALSE;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(31/*report_field_hidden_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // report_field_hidden_opt ::= HIDDEN 
            {
              Boolean RESULT = null;
		
	RESULT = Boolean.TRUE;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(31/*report_field_hidden_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // report_field_sortorder ::= SORT DESCENDING INTEGER_LITERAL 
            {
              QWRFieldSortorder RESULT = null;
		int sort_nbrleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int sort_nbrright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.Integer sort_nbr = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = new QWRDescFieldSortorder(sort_nbr.intValue());

              CUP$QWRParser$result = new java_cup.runtime.Symbol(29/*report_field_sortorder*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // report_field_sortorder ::= SORT ASCENDING INTEGER_LITERAL 
            {
              QWRFieldSortorder RESULT = null;
		int sort_nbrleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int sort_nbrright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.Integer sort_nbr = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = new QWRAscFieldSortorder(sort_nbr.intValue());

              CUP$QWRParser$result = new java_cup.runtime.Symbol(29/*report_field_sortorder*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // report_field_sortorder_opt ::= report_field_sortorder 
            {
              QWRFieldSortorder RESULT = null;
		int sortorderleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int sortorderright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRFieldSortorder sortorder = (QWRFieldSortorder)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = sortorder;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(30/*report_field_sortorder_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // report_field_sortorder_opt ::= 
            {
              QWRFieldSortorder RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(30/*report_field_sortorder_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // report_field_font_opt ::= report_font 
            {
              QWRFont RESULT = null;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = font;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(28/*report_field_font_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // report_field_font_opt ::= 
            {
              QWRFont RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(28/*report_field_font_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // report_field_columnname ::= COLUMNNAME IDENTIFIER 
            {
              String RESULT = null;
		int columnnameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int columnnameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.String columnname = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = columnname;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(26/*report_field_columnname*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // report_field_columnname_opt ::= report_field_columnname 
            {
              String RESULT = null;
		int columnnameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int columnnameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		String columnname = (String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = columnname;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(27/*report_field_columnname_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // report_field_columnname_opt ::= 
            {
              String RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(27/*report_field_columnname_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // report_field ::= DEFINE FIELD FOR STRING_LITERAL report_field_columnname_opt report_field_font_opt LABEL STRING_LITERAL WIDTH INTEGER_LITERAL SPACE_BEFORE INTEGER_LITERAL VALUE_OF report_field_sortorder_opt report_field_hidden_opt report_field_justification TRUNCATION_MARK STRING_LITERAL report_field_linebreak_opt TYPE report_field_type report_field_fieldset_opt report_field_grouped_opt report_field_function_opt SEMICOLON 
            {
              QWRField RESULT = null;
		int field_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-21)).left;
		int field_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-21)).right;
		java.lang.String field_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-21)).value;
		int column_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-20)).left;
		int column_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-20)).right;
		String column_name = (String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-20)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-19)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-19)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-19)).value;
		int labelleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-17)).left;
		int labelright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-17)).right;
		java.lang.String label = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-17)).value;
		int label_widthleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-15)).left;
		int label_widthright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-15)).right;
		java.lang.Integer label_width = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-15)).value;
		int label_space_beforeleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-13)).left;
		int label_space_beforeright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-13)).right;
		java.lang.Integer label_space_before = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-13)).value;
		int sortorderleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-11)).left;
		int sortorderright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-11)).right;
		QWRFieldSortorder sortorder = (QWRFieldSortorder)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-11)).value;
		int hiddenleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-10)).left;
		int hiddenright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-10)).right;
		Boolean hidden = (Boolean)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-10)).value;
		int justificationleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-9)).left;
		int justificationright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-9)).right;
		QWRFieldJustification justification = (QWRFieldJustification)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-9)).value;
		int truncation_markleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-7)).left;
		int truncation_markright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-7)).right;
		java.lang.String truncation_mark = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-7)).value;
		int linebreakleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-6)).left;
		int linebreakright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-6)).right;
		Boolean linebreak = (Boolean)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-6)).value;
		int groupingleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int groupingright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		QWRFieldGrouping grouping = (QWRFieldGrouping)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int functionleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int functionright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRFieldFunction function = (QWRFieldFunction)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRField(field_name, column_name, font, label, label_width, label_space_before, sortorder, 
	                      hidden.booleanValue(), justification, truncation_mark, linebreak.booleanValue(),
	                      grouping, function);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(25/*report_field*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-24)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // report_footer ::= FOOTER STRING_LITERAL report_font 
            {
              QWRCaption RESULT = null;
		int footerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int footerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		java.lang.String footer = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = new QWRCaption(footer, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(23/*report_footer*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // report_footer_opt ::= report_footer 
            {
              QWRCaption RESULT = null;
		int footerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int footerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption footer = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = footer;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(24/*report_footer_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // report_footer_opt ::= 
            {
              QWRCaption RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(24/*report_footer_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // report_header ::= HEADER STRING_LITERAL report_font 
            {
              QWRCaption RESULT = null;
		int headerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int headerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		java.lang.String header = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = new QWRCaption(header, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(21/*report_header*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // report_header_opt ::= report_header 
            {
              QWRCaption RESULT = null;
		int headerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int headerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption header = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = header;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(22/*report_header_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // report_header_opt ::= 
            {
              QWRCaption RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(22/*report_header_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // report_color ::= COLOR STRING_LITERAL 
            {
              String RESULT = null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.String color = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = color;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(19/*report_color*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // report_color_opt ::= report_color 
            {
              String RESULT = null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = color;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(20/*report_color_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // report_color_opt ::= 
            {
              String RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(20/*report_color_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // report_font ::= report_color_opt FONT STRING_LITERAL STRING_LITERAL INTEGER_LITERAL 
            {
              QWRFont RESULT = null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).value;
		int font_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int font_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String font_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int font_str1left = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int font_str1right = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		java.lang.String font_str1 = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		int sizeleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int sizeright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.Integer size = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = new QWRFont(font_name, font_str1, size, color);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(18/*report_font*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // report_record_footer ::= DEFINE RECORD FOOTER STRING_LITERAL report_font SEMICOLON 
            {
              QWRCaption RESULT = null;
		int record_footerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int record_footerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String record_footer = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRCaption(record_footer, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(17/*report_record_footer*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // report_record_header ::= DEFINE RECORD HEADER STRING_LITERAL report_font SEMICOLON 
            {
              QWRCaption RESULT = null;
		int record_headerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int record_headerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String record_header = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRCaption(record_header, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(16/*report_record_header*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // report_page_footer ::= DEFINE PAGE FOOTER STRING_LITERAL report_font SEMICOLON 
            {
              QWRCaption RESULT = null;
		int page_footerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int page_footerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String page_footer = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRCaption(page_footer, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(15/*report_page_footer*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // report_page_header ::= DEFINE PAGE HEADER STRING_LITERAL report_font SEMICOLON 
            {
              QWRCaption RESULT = null;
		int page_headerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int page_headerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String page_header = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRCaption(page_header, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(14/*report_page_header*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // report_epilogue ::= DEFINE EPILOGUE STRING_LITERAL report_font SEMICOLON 
            {
              QWRCaption RESULT = null;
		int epilogueleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int epilogueright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String epilogue = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRCaption(epilogue, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(13/*report_epilogue*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // report_prologue ::= DEFINE PROLOGUE STRING_LITERAL report_font SEMICOLON 
            {
              QWRCaption RESULT = null;
		int prologueleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int prologueright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		java.lang.String prologue = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		int fontleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int fontright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRFont font = (QWRFont)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		
	RESULT = new QWRCaption(prologue, font);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(12/*report_prologue*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // report_define ::= report_constraint 
            {
              Object RESULT = null;
		int constraintleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int constraintright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRConstraint constraint = (QWRConstraint)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.addConstraint(constraint);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // report_define ::= report_field 
            {
              Object RESULT = null;
		int fieldleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int fieldright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRField field = (QWRField)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.addField(field);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // report_define ::= report_record_footer 
            {
              Object RESULT = null;
		int footerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int footerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption footer = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.setRecordFooter(footer);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // report_define ::= report_record_header 
            {
              Object RESULT = null;
		int headerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int headerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption header = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.setRecordHeader(header);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // report_define ::= report_page_footer 
            {
              Object RESULT = null;
		int footerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int footerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption footer = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.setPageFooter(footer);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // report_define ::= report_page_header 
            {
              Object RESULT = null;
		int headerleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int headerright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption header = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.setPageHeader(header);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // report_define ::= report_epilogue 
            {
              Object RESULT = null;
		int epilogueleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int epilogueright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption epilogue = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.setEpilogue(epilogue);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // report_define ::= report_prologue 
            {
              Object RESULT = null;
		int prologueleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int prologueright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		QWRCaption prologue = (QWRCaption)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	this.qwrDefinition.setPrologue(prologue);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(9/*report_define*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // report_defines ::= report_defines report_define 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(10/*report_defines*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // report_defines ::= report_define 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(10/*report_defines*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // report_defines_opt ::= 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(11/*report_defines_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // report_defines_opt ::= report_defines 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(11/*report_defines_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // report_outputformat ::= HTML 
            {
              QWROutputFormat RESULT = null;
		
	RESULT = new QWRHtmlOutputFormat();

              CUP$QWRParser$result = new java_cup.runtime.Symbol(8/*report_outputformat*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // report_outputformat ::= ASCII 
            {
              QWROutputFormat RESULT = null;
		
	RESULT = new QWRAsciiOutputFormat();

              CUP$QWRParser$result = new java_cup.runtime.Symbol(8/*report_outputformat*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // report_outputformat ::= 
            {
              QWROutputFormat RESULT = null;
		
	RESULT = new QWRAsciiOutputFormat();

              CUP$QWRParser$result = new java_cup.runtime.Symbol(8/*report_outputformat*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // report_destination ::= FILE STRING_LITERAL 
            {
              Object RESULT = null;
		int printer_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int printer_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.String printer_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(7/*report_destination*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // report_destination ::= PRINTER STRING_LITERAL 
            {
              Object RESULT = null;
		int printer_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int printer_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.String printer_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(7/*report_destination*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // report_destination ::= SCREEN 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(7/*report_destination*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // report_type ::= STRUCTURED 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(6/*report_type*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // report_type ::= TABULAR 
            {
              Object RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(6/*report_type*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // report_declaration ::= DEFINE REPORT STRING_LITERAL TYPE report_type FOR STRING_LITERAL WIDTH INTEGER_LITERAL HEIGHT INTEGER_LITERAL SPACING INTEGER_LITERAL DESTINATION report_destination USING RELATION SET STRING_LITERAL USING ANCHOR TABLE STRING_LITERAL OUTPUTFORMAT report_outputformat LBRACE report_defines_opt RBRACE 
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-25)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-25)).right;
		java.lang.String name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-25)).value;
		int module_domain_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-21)).left;
		int module_domain_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-21)).right;
		java.lang.String module_domain_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-21)).value;
		int widthleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-19)).left;
		int widthright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-19)).right;
		java.lang.Integer width = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-19)).value;
		int heightleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-17)).left;
		int heightright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-17)).right;
		java.lang.Integer height = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-17)).value;
		int spacingleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-15)).left;
		int spacingright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-15)).right;
		java.lang.Integer spacing = (java.lang.Integer)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-15)).value;
		int relationset_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-9)).left;
		int relationset_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-9)).right;
		java.lang.String relationset_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-9)).value;
		int table_nameleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).left;
		int table_nameright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).right;
		java.lang.String table_name = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-5)).value;
		int outputformatleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).left;
		int outputformatright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).right;
		QWROutputFormat outputformat = (QWROutputFormat)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).value;
		
	this.qwrDefinition.setName(name);
	this.qwrDefinition.setDomainName(module_domain_name);
	this.qwrDefinition.setRelationsetName(relationset_name);
	this.qwrDefinition.setAnchorTableName(table_name);
	this.qwrDefinition.setWidth(width);
	this.qwrDefinition.setHeight(height);
	this.qwrDefinition.setSpacing(spacing);
	this.qwrDefinition.setOutputFormat(outputformat);

              CUP$QWRParser$result = new java_cup.runtime.Symbol(5/*report_declaration*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-27)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // report_description ::= DESCRIPTION STRING_LITERAL 
            {
              String RESULT = null;
		int descleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int descright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.String desc = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = desc;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(3/*report_description*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // report_description_opt ::= report_description 
            {
              String RESULT = null;
		int descleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int descright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		String desc = (String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;
		
	RESULT = desc;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(4/*report_description_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // report_description_opt ::= 
            {
              String RESULT = null;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(4/*report_description_opt*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // version_declaration ::= VERSION STRING_LITERAL 
            {
              Object RESULT = null;
		int versionleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).left;
		int versionright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right;
		java.lang.String version = (java.lang.String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).value;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(2/*version_declaration*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // qwr_definition ::= version_declaration report_description_opt report_declaration fontinfo_declaration 
            {
              QWRDefinition RESULT = null;
		int descleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).left;
		int descright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).right;
		String desc = (String)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-2)).value;
		
	this.qwrDefinition.setDescription(desc);
	RESULT = this.qwrDefinition;

              CUP$QWRParser$result = new java_cup.runtime.Symbol(1/*qwr_definition*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          return CUP$QWRParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= qwr_definition EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).right;
		QWRDefinition start_val = (QWRDefinition)((java_cup.runtime.Symbol) CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).value;
		RESULT = start_val;
              CUP$QWRParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$QWRParser$stack.elementAt(CUP$QWRParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$QWRParser$parser.done_parsing();
          return CUP$QWRParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

