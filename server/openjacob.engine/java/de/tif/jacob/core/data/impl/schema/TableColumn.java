/*******************************************************************************
 *    This file is part of Open-jACOB
 *    Copyright (C) 2005-2006 Tarragon GmbH
 * 
 *    This program is free software; you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation; version 2 of the License.
 * 
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 * 
 *    You should have received a copy of the GNU General Public License     
 *    along with this program; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
 *    USA
 *******************************************************************************/

package de.tif.jacob.core.data.impl.schema;

import java.util.List;

import de.tif.jacob.core.data.impl.sql.ISQLDataSource;
import de.tif.jacob.core.exception.UserRuntimeException;
import de.tif.jacob.core.schema.ISchemaColumnDefinition;
import de.tif.jacob.i18n.CoreMessage;

/**
 * @author Andreas Sonntag
 *
 * To change the template for this generated type comment go to
 * Window>Preferences>Java>Code Generation>Code and Comments
 */
public class TableColumn extends SchemaObject implements ISchemaColumnDefinition
{
  public final static String ENUM_LABELS_PROPERTY = "ENUM_LABELS"; 
  public final static Object INCONSISTENT_ENUM_LABELS = new Object();
  
  private final String tablename;
  private final String name;
  private final int sqlType;
  private final int size;
  private final int decimalDigits;
  private final String defaultValue;
  private final boolean nullable;
  private boolean autoGeneratedKey;
  
	/**
	 * @param tablename
	 * @param name
	 * @param sqlType
	 * @param size
	 * @param decimalDigits
	 * @param defaultValue
	 * @param nullable
	 * @param autoGeneratedKey
	 */
	public TableColumn(String tablename, String name, int sqlType, int size, int decimalDigits, String defaultValue, boolean nullable)//, boolean autoGeneratedKey)
  {
	  this.tablename = tablename;
    this.name = name;
    this.sqlType = sqlType;
    this.size = size;
    this.decimalDigits= decimalDigits;
    // Achim-Problem 27.1.2007
    this.defaultValue = defaultValue == null || defaultValue.length() == 0 ? null : defaultValue;
    this.nullable = nullable;
    // IBIS: Fetch auto increment from meta data seems to be difficult 
    this.autoGeneratedKey = false;
  }
	
  /**
   * @return Returns the name.
   */
  public String getDBName()
  {
    return name;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#getDBTableName()
   */
  public String getDBTableName()
  {
    return this.tablename;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#getDecimalDigits()
   */
  public int getSQLDecimalDigits(ISQLDataSource dataSource)
  {
    return this.decimalDigits;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#getSize()
   */
  public int getSQLSize(ISQLDataSource dataSource)
  {
    return this.size;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#getSQLType()
   */
  public int getSQLType(ISQLDataSource dataSource)
  {
    return this.sqlType;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#isRequired()
   */
  public boolean isRequired()
  {
    return !this.nullable;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#getDefaultValue()
   */
  public String getDBDefaultValue(ISQLDataSource dataSource)
  {
    return this.defaultValue;
  }
  
  /**
   * @param autoGeneratedKey The autoGeneratedKey to set.
   */
  public void setAutoGeneratedKey(boolean autoGeneratedKey)
  {
    this.autoGeneratedKey = autoGeneratedKey;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#isDBAutoGenerated(de.tif.jacob.core.data.impl.sql.SQLDataSource)
   */
  public boolean isDBAutoGenerated(ISQLDataSource dataSource)
  {
    return this.autoGeneratedKey;
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#getEnumerationLabels()
   */
  public List getEnumerationLabels()
  {
    Object enumLabels = getProperty(ENUM_LABELS_PROPERTY);
    if (enumLabels instanceof List)
      return (List) enumLabels;
    
    // This happens, e.g. if enumeration labels are missing in qw_fieldinfo.
    throw new UserRuntimeException(new CoreMessage("MSG_QW_FIELDINFO_ENUM_INCONSISTENT", this.tablename, this.name));
  }
  
  /* (non-Javadoc)
   * @see de.tif.jacob.core.schema.ISchemaColumnDefinition#isEnumeration()
   */
  public boolean isEnumeration()
  {
    return getProperty(ENUM_LABELS_PROPERTY) != null;
  }
}
