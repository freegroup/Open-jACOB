/*******************************************************************************
 *    This file is part of Open-jACOB
 *    Copyright (C) 2005-2006 Tarragon GmbH
 * 
 *    This program is free software; you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation; version 2 of the License.
 * 
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 * 
 *    You should have received a copy of the GNU General Public License     
 *    along with this program; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
 *    USA
 *******************************************************************************/

package de.tif.jacob.transformer;

import java.io.IOException;
import java.io.OutputStream;
import java.util.Locale;
import de.tif.jacob.core.Context;
import de.tif.jacob.core.data.IDataBrowser;

/**
 * @author Andreas Herz
 *  
 */
public interface ITransformer
{
  static public final String RCS_ID = "$Id: ITransformer.java,v 1.3 2009/01/12 11:30:21 freegroup Exp $";
  static public final String RCS_REV = "$Revision: 1.3 $";

  /**
   * Set the name of the transformed data. A ITransformer implementation
   * can use this information to enrich the output.
   * 
   * @param name
   */
  public void setName(String name);
  
  /**
	 * Transforms the hands over data to a simple table representation. No xsl stylesheet will be used.
	 * 
	 * @param out    The stream for the result output
	 * @param header the header row for the table
	 * @param data   The body of the table
	 * @throws IOException
	 */
  public void transform(OutputStream out, String[] header, String[][] data) throws IOException;

  /**
   * Transforms the hands over data to a simple table representation. No xsl stylesheet will be used.
   * 
   * @param out the output stream to write the data to
   * @param header the table header
   * @param rows
   * @throws IOException
   */
  public void transform(OutputStream out, String[] header, ITransformerRow[] rows) throws IOException;

  /**
   * Transforms the hands over data to a simple table representation. No xsl stylesheet will be used.
   * 
   * @param out the output stream to write the data to
   * @param header the table header
   * @param rows
   * @param locale
   *          the locale to use for transformation or <code>null</code> to use default locale
   * @throws IOException
   * @since 2.5.6
   */
  public void transform(OutputStream out, String[] header, ITransformerRow[] rows, Locale locale) throws IOException;

  /**
   * Transforms the hands over browser to a simple table representation
   * 
   * @param out the output stream to write the data to
   * @param context the current working context
   * @param browser the browser to transform
   * @throws IOException
   * @since 2.8.0
   */
  public void transform(OutputStream out,Context context, IDataBrowser browser) throws IOException;
  
  /**
   * 
   * @return The mime type of the generated byte stream. e.g. application/excel, text/plain...
   */
  public String getMimeType();
}
