#  This file is part of Open-jACOB
#   Copyright (C) 2005-2006 Tarragon GmbH
#  
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; version 2 of the License.
#  
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License     
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  
#   USA
#
#-------------------------------------------------------------------------------
# The bootstrap of the jACOB
#
# All named class will be loaded and the method init() called.
# The classes must implement the interface [de.tif.jacob.core.BootstrapEntry]
#-------------------------------------------------------------------------------
#
# NOTE: Do not change the order of bootstrap classes!
#
bootstrap.class.1=de.tif.jacob.deployment.ApplicationNotifier
bootstrap.class.2=de.tif.jacob.util.db.Database
bootstrap.class.3=de.tif.jacob.core.data.impl.DataSourceManager
bootstrap.class.4=de.tif.jacob.core.startup.TableConfiguration
bootstrap.class.5=de.tif.jacob.deployment.DeployManager
bootstrap.class.6=de.tif.jacob.transformer.TransformerFactory
bootstrap.class.7=de.tif.jacob.core.PropertyManagement
bootstrap.class.8=de.tif.jacob.security.UserManagement
# Cluster muss vor dem Scheduler kommen
bootstrap.class.9=de.tif.jacob.cluster.ClusterManager
bootstrap.class.10=de.tif.jacob.balancer.Balancer
# BirtEngineManager muss vor dem Scheduler kommen (Denk an ScheduledReport's)
bootstrap.class.11=de.tif.jacob.report.birt.impl.BirtEngineManager
bootstrap.class.12=de.tif.jacob.scheduler.SchedulerService
bootstrap.class.13=de.tif.jacob.report.ReportManager
bootstrap.class.14=de.tif.jacob.core.data.impl.index.update.IndexUpdateService
bootstrap.class.15=de.tif.jacob.core.data.impl.sql.SQLMonitor
bootstrap.class.16=de.tif.jacob.screen.impl.theme.ThemeManager
bootstrap.class.17=de.tif.jacob.util.logging.LoggingManager

#-------------------------------------------------------------------------------
# Converter for the different mime types
#
# The implementations for the different mimeTypes data converter
# convertes Object[][] to e.g. Excel, PDF.....
#-------------------------------------------------------------------------------
#
transformer.adapter.class.1=de.tif.jacob.transformer.impl.Excel
transformer.adapter.class.2=de.tif.jacob.transformer.impl.TextPlain
transformer.adapter.class.3=de.tif.jacob.transformer.impl.TextHtml

#-------------------------------------------------------------------------------
# Predefined data sources definitions
#
# Assign the datasources with an JNDI data source managed by the webserver or with
# a JACOB managed SQL connection pools.
# The JACOB managed pools itself are plattform depend (IP addresses, passwords..) 
# and defined in the XXX_plattform.properties
#-------------------------------------------------------------------------------
#
datasource.environment.context = java:comp/env

datasource.jacobPersistentDataSource.className       = de.tif.jacob.core.data.impl.sql.HSQLDataSource
datasource.jacobPersistentDataSource.connectString   = jdbc:hsqldb:file:${webapp.dir}WEB-INF/data/jacobconfig
datasource.jacobPersistentDataSource.driverClassName = org.hsqldb.jdbcDriver
datasource.jacobPersistentDataSource.adjustment      = jACOB

datasource.jacobTransientDataSource.className = de.tif.jacob.core.data.impl.sql.InMemorySQLDataSource
datasource.jacobTransientDataSource.adjustment = jACOB

datasource.jacobClusterDataSource.className = de.tif.jacob.core.data.impl.adhoc.AdminClusterDataSource
datasource.jacobClusterDataSource.adjustment = jACOB

datasource.jacobLockDataSource.className = de.tif.jacob.core.data.impl.adhoc.AdminLockDataSource
datasource.jacobLockDataSource.adjustment = jACOB
